{
	"info": {
		"_postman_id": "9c218cd6-b2f2-4bf4-b14f-4bb04789318f",
		"name": "AVA Platform (P-Chain) API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "platform.createBlockchain",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f897806e-8693-41d2-b7f0-c6b66206c4c9",
						"exec": [
							"let payernonce = pm.environment.get(\"payerNonce\");\r",
							"pm.environment.set(\"payerNonce\", 1+Number(payernonce));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"platform.createBlockchain\",\r\n    \"params\" : {\r\n        \"vmID\":\"dummy_vmid\",\r\n        \"SubnetID\":\"{{subnetId}}\",\r\n        \"name\":\"dummy_blockchain_name\",\r\n        \"genesisData\":\"{{genesisData}}\",\r\n        \"payerNonce\":{{payerNonce}}\r\n    },\r\n    \"id\": 1\r\n}"
				},
				"url": {
					"raw": "127.0.0.1:9650/ext/P",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "9650",
					"path": [
						"ext",
						"P"
					]
				}
			},
			"response": []
		},
		{
			"name": "platform.getBlockchainStatus",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "daa9a1fe-074d-428f-baa8-491aee3ab9f9",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"platform.getBlockchainStatus\",\r\n    \"params\":{\r\n        \"blockchainID\":\"{{blockchainId}}\"\r\n    },\r\n    \"id\": 1\r\n}"
				},
				"url": {
					"raw": "127.0.0.1:9650/ext/P",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "9650",
					"path": [
						"ext",
						"P"
					]
				}
			},
			"response": []
		},
		{
			"name": "platform.getBlockchains",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f6abc8d9-a84f-4a41-ae40-b18ef043bb8f",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"platform.getBlockchains\",\r\n    \"params\": {},\r\n    \"id\": 1\r\n}"
				},
				"url": {
					"raw": "127.0.0.1:9650/ext/P",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "9650",
					"path": [
						"ext",
						"P"
					]
				}
			},
			"response": []
		},
		{
			"name": "platform.createAccount",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"platform.createAccount\",\r\n    \"params\": {\r\n        \"username\":\"{{username}}\",\r\n        \"password\":\"{{password}}\"\r\n    },\r\n    \"id\": 1\r\n}"
				},
				"url": {
					"raw": "127.0.0.1:9650/ext/P",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "9650",
					"path": [
						"ext",
						"P"
					]
				}
			},
			"response": []
		},
		{
			"name": "platform.getAccount",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4bbe4758-02f5-448a-bb04-15394f12ebee",
						"exec": [
							"//this call does not increment payerNonce, it just retrieves it\r",
							"//access the JSON response body\r",
							"let response = pm.response.json()\r",
							"\r",
							"// extract the desired data\r",
							"let Payernonce = response.result.nonce;\r",
							"\r",
							"//store this value as en invironment variable\r",
							"//where \"nonce\" is the key to the desired value in the response body, \"payerNonce\" is the name of our environment variable and \"Payernonce\" is the value that we will store as this variable\r",
							"pm.environment.set(\"payerNonce\", Payernonce)\r",
							"\r",
							"//and so for account balance\r",
							"let response2 = pm.response.json()\r",
							"let Amount = response.result.balance;\r",
							"pm.environment.set(\"amount\", Amount)\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"platform.getAccount\",\r\n    \"params\":{\r\n        \"address\":\"{{account}}\"\r\n    },\r\n    \"id\": 1\r\n}"
				},
				"url": {
					"raw": "127.0.0.1:9650/ext/bc/P",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "9650",
					"path": [
						"ext",
						"bc",
						"P"
					]
				},
				"description": "Retrieves account nonce and balance."
			},
			"response": []
		},
		{
			"name": "platform.listAccounts",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "49757930-37de-4e3b-9f67-bc5e8f0ed57a",
						"exec": [
							"\r",
							"//this call does not increment payerNonce, it just retrieves it\r",
							"//access the JSON response body\r",
							"let Response = pm.response.json()\r",
							"\r",
							"//Convert to string\r",
							"let Dataobject = JSON.stringify(Response);\r",
							"\r",
							"//desired data is inside an array (i.e. it has no key for a set of values); extract the values for \"address\", \"nonce\", and \"balance\".\r",
							"var Dataparse = JSON.parse(Dataobject);\r",
							"pm.environment.set(\"account\", Dataparse.result.accounts[0].address);\r",
							"\r",
							"var Dataparse2 = JSON.parse(Dataobject);\r",
							"pm.environment.set(\"payerNonce\", Dataparse2.result.accounts[0].nonce);\r",
							"\r",
							"var Dataparse3 = JSON.parse(Dataobject);\r",
							"pm.environment.set(\"amount\", Dataparse3.result.accounts[0].balance);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"jsonrpc\":\"2.0\",\r\n    \"id\"     :1,\r\n    \"method\" :\"platform.listAccounts\",\r\n    \"params\" :{\r\n        \"username\":\"{{username}}\",\r\n        \"password\":\"{{password}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "127.0.0.1:9650/ext/P",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "9650",
					"path": [
						"ext",
						"P"
					]
				}
			},
			"response": []
		},
		{
			"name": "platform.getCurrentValidators",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"jsonrpc\": \"2.0\",\r\n\t\"method\": \"platform.getCurrentValidators\",\r\n\t\"params\": {},\r\n\t\"id\": 1\r\n}"
				},
				"url": {
					"raw": "127.0.0.1:9650/ext/P?Content-Type=application/json",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "9650",
					"path": [
						"ext",
						"P"
					],
					"query": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "platform.getPendingValidators",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"platform.getPendingValidators\",\r\n    \"params\": {},\r\n    \"id\": 4\r\n}"
				},
				"url": {
					"raw": "127.0.0.1:9650/ext/P",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "9650",
					"path": [
						"ext",
						"P"
					]
				}
			},
			"response": []
		},
		{
			"name": "platform.sampleValidators",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"jsonrpc\":\"2.0\",\r\n    \"id\"     :1,\r\n    \"method\" :\"platform.sampleValidators\",\r\n    \"params\" :{\r\n        \"size\":2\r\n    }\r\n}"
				},
				"url": {
					"raw": "127.0.0.1:9650/ext/P",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "9650",
					"path": [
						"ext",
						"P"
					]
				}
			},
			"response": []
		},
		{
			"name": "platform.addDefaultSubnetValidator",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "64e0492a-a6d3-44d7-abdf-936dbb7c3837",
						"exec": [
							"let payernonce = pm.environment.get(\"payerNonce\");\r",
							"pm.environment.set(\"payerNonce\", 1+Number(payernonce));\r",
							"\r",
							"var moment = require('moment')\r",
							"\r",
							"    pm.environment.set(\"current_timestamp\", moment().unix())\r",
							"    pm.environment.set(\"validationStartTime_timestampPlusXMinutes\", moment().add(5, 'minutes').unix())\r",
							"    pm.environment.set(\"validationEndTime_timestampPlusXDays\", moment().add(16, 'days').unix())"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "5851748f-2978-40c4-ae49-368b8c69bc49",
						"exec": [
							"//access the JSON response body\r",
							"let response = pm.response.json()\r",
							"\r",
							"// extract the desired data\r",
							"let Unsignedtx = response.result.unsignedTx;\r",
							"\r",
							"//store this value as en invironment variable\r",
							"//where \"unsignedTx\" is the key to the desired value in the response body, \"unsignedTx\" is the name of our environment variable and \"Unsignedtx\" is the value that we will store as this variable\r",
							"pm.environment.set(\"unsignedTx\", Unsignedtx)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"platform.addDefaultSubnetValidator\",\r\n    \"params\": {\r\n        \"id\":\"{{nodeId}}\",\r\n        \"payerNonce\":{{payerNonce}},\r\n        \"destination\":\"{{account}}\",\r\n        \"startTime\":{{validationStartTime_timestampPlusXMinutes}},\r\n        \"endTime\":{{validationEndTime_timestampPlusXDays}},\r\n        \"stakeAmount\":{{amount}}\r\n    },\r\n    \"id\": 1\r\n}",
					"options": {
						"raw": {}
					}
				},
				"url": {
					"raw": "127.0.0.1:9650/ext/P",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "9650",
					"path": [
						"ext",
						"P"
					]
				}
			},
			"response": []
		},
		{
			"name": "platform.addNonDefaultSubnetValidator",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "2ae8a22c-068d-4e83-a96e-3a04c797bcf8",
						"exec": [
							"var moment = require('moment')\r",
							"\r",
							"    pm.environment.set(\"current_timestamp\", moment().unix())\r",
							"    pm.environment.set(\"current_timestamp+10minutes\", moment().add(10, 'minutes').unix())\r",
							"    pm.environment.set(\"current_timestamp+2days\", moment().add(2, 'days').unix())\r",
							"\r",
							"let payernonce = pm.environment.get(\"payerNonce\");\r",
							"pm.environment.set(\"payerNonce\", 1+Number(payernonce));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "7682138b-eee4-47a7-a807-4c9064836615",
						"exec": [
							"//access the JSON response body\r",
							"let response = pm.response.json()\r",
							"\r",
							"// extract the desired data\r",
							"let Unsignedtx = response.result.unsignedTx;\r",
							"\r",
							"//store this value as en invironment variable\r",
							"//where \"unsignedTx\" is the key to the desired value in the response body, \"unsignedTx\" is the name of our environment variable and \"Unsignedtx\" is the value that we will store as this variable\r",
							"pm.environment.set(\"unsignedTx\", Unsignedtx)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"platform.addNonDefaultSubnetValidator\",\r\n    \"params\": {\r\n        \"id\":\"{{nodeId}}\",\r\n        \"subnetID\":\"{{subnetId}}\",\r\n        \"startTime\":{{current_timestamp_add10minutes}},\r\n        \"endTime\":{{current_timestamp_add2days}},\r\n        \"weight\":1,\r\n        \"payerNonce\":{{payerNonce}}\r\n    },\r\n    \"id\": 1\r\n}"
				},
				"url": {
					"raw": "127.0.0.1:9650/ext/P",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "9650",
					"path": [
						"ext",
						"P"
					]
				}
			},
			"response": []
		},
		{
			"name": "platform.addDefaultSubnetDelegator",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "1a084c8d-8fa8-4f6a-8a4e-3138a1c1668f",
						"exec": [
							"var moment = require('moment')\r",
							"\r",
							"    pm.environment.set(\"current_timestamp\", moment().unix())\r",
							"    pm.environment.set(\"current_timestamp_add10minutes\", moment().add(10, 'minutes').unix())\r",
							"    pm.environment.set(\"current_timestamp_add2days\", moment().add(2, 'days').unix())\r",
							"\r",
							"let payernonce = pm.environment.get(\"payerNonce\");\r",
							"pm.environment.set(\"payerNonce\", 1+Number(payernonce));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"platform.addDefaultSubnetDelegator\",\r\n    \"params\": {\r\n        \"id\":\"{{nodeId}}\",\r\n        \"payerNonce\":{{payerNonce}},\r\n        \"destination\":\"{{account}}\",\r\n        \"startTime\":{{current_timestamp_add10minutes}},\r\n        \"endTime\":{{current_timestamp_add2days}},\r\n        \"stakeAmount\":{{amount}}\r\n    },\r\n    \"id\": 1\r\n}"
				},
				"url": {
					"raw": "127.0.0.1:9650/ext/P",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "9650",
					"path": [
						"ext",
						"P"
					]
				}
			},
			"response": []
		},
		{
			"name": "platform.createSubnet",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "ec316a53-19ed-435e-9949-81401b5e48f8",
						"exec": [
							"let payernonce = pm.environment.get(\"payerNonce\");\r",
							"pm.environment.set(\"payerNonce\", 1+Number(payernonce));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"platform.createSubnet\",\r\n    \"params\": {\r\n        \"controlKeys\":[\r\n            \"{{account}}\",\r\n            \"other_account\"\r\n        ],\r\n        \"threshold\":2,\r\n        \"payerNonce\":{{payerNonce}}\r\n    },\r\n    \"id\": 1\r\n}"
				},
				"url": {
					"raw": "127.0.0.1:9650/ext/P",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "9650",
					"path": [
						"ext",
						"P"
					]
				}
			},
			"response": []
		},
		{
			"name": "platform.getSubnets",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "b82dfd94-44a3-4045-8ee7-3f4d32c094b2",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"platform.getSubnets\",\r\n    \"params\": {},\r\n    \"id\": 6\r\n}"
				},
				"url": {
					"raw": "127.0.0.1:9650/ext/P",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "9650",
					"path": [
						"ext",
						"P"
					]
				}
			},
			"response": []
		},
		{
			"name": "platform.validatedBy",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "eaa8e2a3-40bb-4ca0-b170-fec728529e58",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"platform.validatedBy\",\r\n    \"params\": {\r\n        \"blockchainID\": \"{{blockchainId}}\"\r\n    },\r\n    \"id\": 1\r\n}"
				},
				"url": {
					"raw": "127.0.0.1:9650/ext/P",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "9650",
					"path": [
						"ext",
						"P"
					]
				}
			},
			"response": []
		},
		{
			"name": "platform.validates",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "6171d4f7-0b5c-4a43-9b19-a41edd763210",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"platform.validates\",\r\n    \"params\": {\r\n        \"subnetID\":\"{{subnetId}}\"\r\n    },\r\n    \"id\": 1\r\n}"
				},
				"url": {
					"raw": "127.0.0.1:9650/ext/P",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "9650",
					"path": [
						"ext",
						"P"
					]
				}
			},
			"response": []
		},
		{
			"name": "platform.exportAVA",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "8a3aed62-5d74-4ca5-82aa-de54905f1c27",
						"exec": [
							"let noXaddress = pm.environment.get(\"address\");\r",
							"\r",
							"var result = noXaddress.slice(2);\r",
							"\r",
							"pm.environment.set(\"noXaddress\", (result));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "e953fb49-cb05-4184-aed2-0878139eb94f",
						"exec": [
							"//access the JSON response body\r",
							"let response = pm.response.json()\r",
							"\r",
							"// extract the desired data\r",
							"let Unsignedtx = response.result.unsignedTx;\r",
							"\r",
							"//store this value as en invironment variable\r",
							"//where \"unsignedTx\" is the key to the desired value in the response body, \"unsignedTx\" is the name of our environment variable and \"Unsignedtx\" is the value that we will store as this variable\r",
							"pm.environment.set(\"unsignedTx\", Unsignedtx)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"jsonrpc\": \"2.0\",\n    \"method\": \"platform.exportAVA\",\n    \"params\": {\n        \"to\":\"{{noXaddress}}\",\n        \"amount\":1,\n        \"payerNonce\":{{payerNonce}}\n    },\n    \"id\": 1\n}"
				},
				"url": {
					"raw": "127.0.0.1:9650/ext/bc/P",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "9650",
					"path": [
						"ext",
						"bc",
						"P"
					]
				}
			},
			"response": []
		},
		{
			"name": "platform.importAVA",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "ec4ccc6e-a82f-4fbc-83e1-542418cab39e",
						"exec": [
							"let payernonce = pm.environment.get(\"payerNonce\");\r",
							"pm.environment.set(\"payerNonce\", 1+Number(payernonce));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "bdbb21fe-2106-46e1-a8fb-b229a1a2250c",
						"exec": [
							"//access the JSON response body\r",
							"let response = pm.response.json()\r",
							"\r",
							"// extract the desired data\r",
							"let Tx = response.result.tx;\r",
							"\r",
							"//store this value as en invironment variable\r",
							"//where \"tx\" is the key to the desired value in the response body, \"tx\" is the name of our environment variable and \"Tx\" is the value that we will store as this variable\r",
							"pm.environment.set(\"tx\", Tx)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"jsonrpc\": \"2.0\",\n    \"method\": \"platform.importAVA\",\n    \"params\": {\n        \"username\":\"{{username}}\",\n        \"password\":\"{{password}}\",\n        \"to\":\"{{account}}\",\n        \"payerNonce\":{{payerNonce}}\n    },\n    \"id\": 1\n}"
				},
				"url": {
					"raw": "127.0.0.1:9650/ext/bc/P",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "9650",
					"path": [
						"ext",
						"bc",
						"P"
					]
				}
			},
			"response": []
		},
		{
			"name": "platform.sign",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fd8de568-6c45-49bb-aa43-f8b405023ab6",
						"exec": [
							"//access the JSON response body\r",
							"let response = pm.response.json()\r",
							"\r",
							"// extract the desired data\r",
							"let Tx = response.result.tx;\r",
							"\r",
							"//store this value as en invironment variable\r",
							"//where \"Tx\" is the key to the desired value in the response body, \"tx\" is the name of our environment variable and \"Tx\" is the value that we will store as this variable\r",
							"pm.environment.set(\"tx\", Tx)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"jsonrpc\": \"2.0\",\n    \"method\": \"platform.sign\",\n    \"params\": {\n        \"tx\":\"{{unsignedTx}}\",\n        \"signer\":\"{{account}}\",\n        \"username\":\"{{username}}\",\n        \"password\":\"{{password}}\"\n    },\n    \"id\": 2\n}",
					"options": {
						"raw": {}
					}
				},
				"url": {
					"raw": "127.0.0.1:9650/ext/P",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "9650",
					"path": [
						"ext",
						"P"
					]
				}
			},
			"response": []
		},
		{
			"name": "platform.issueTx",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f25c2853-4d26-4121-8abd-0cfca92a15a1",
						"exec": [
							"//access the JSON response body\r",
							"let response = pm.response.json()\r",
							"\r",
							"// extract the desired data\r",
							"let Txid = response.result.txID;\r",
							"\r",
							"//store this value as en invironment variable\r",
							"//where \"Tx\" is the key to the desired value in the response body, \"tx\" is the name of our environment variable and \"Tx\" is the value that we will store as this variable\r",
							"pm.environment.set(\"txid\", Txid)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"platform.issueTx\",\r\n    \"params\": {\r\n        \"tx\":\"{{tx}}\"\r\n    },\r\n    \"id\": 1\r\n}"
				},
				"url": {
					"raw": "127.0.0.1:9650/ext/bc/P",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "9650",
					"path": [
						"ext",
						"bc",
						"P"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "18f008f8-cc48-4baf-a6fb-31cf605c3f67",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "a03226b9-684e-4d5c-9055-b3f8929b6d3e",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}